name: Release Docker Image

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  id-token: write
  pull-requests: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        id: setup
        run: |
          # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ —Ç–µ–≥–∞
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          
          # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥
          PREV_TAG=$(git describe --tags --abbrev=0 ${{ github.ref_name }}^ 2>/dev/null || echo "initial")
          echo "prev_tag=${PREV_TAG}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        uses: actions/github-script@v6
        env:
          CHANGELOG_CONTENT: ""
        with:
          script: |
            try {
              // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ PR –º–µ–∂–¥—É —Ç–µ–≥–∞–º–∏
              const comparison = await github.rest.repos.compareCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                base: '${{ steps.setup.outputs.prev_tag }}',
                head: context.ref
              });

              // –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ PR
              const prMap = new Map();
              for (const commit of comparison.data.commits) {
                const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  commit_sha: commit.sha
                });
                prs.data.forEach(pr => prMap.set(pr.number, pr));
              }

              // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤ Markdown
              const prMarkdown = Array.from(prMap.values())
                .sort((a, b) => b.number - a.number)
                .map(pr => `- [#${pr.number}](${pr.html_url}) ${pr.title}\n  _by @${pr.user.login}_`)
                .join('\n\n');

              core.exportVariable('CHANGELOG_CONTENT', prMarkdown || 'No changes found');
            } catch (error) {
              core.exportVariable('CHANGELOG_CONTENT', 'Error generating changelog');
              core.error(error);
            }

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/terem42/robohash:${{ env.VERSION }}
            ghcr.io/terem42/robohash:latest
          build-args: |
            BUILD_VERSION=${{ env.VERSION }}
          labels: |
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2.2.2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ env.VERSION }}
          body: |        
            ## üöÄ Release ${{ env.VERSION }}

            ### üì¶ Docker Image
            ```bash
            docker pull ghcr.io/terem42/robohash:${{ env.VERSION }}
            ```

            ### üìã Changelog
            ${{ env.CHANGELOG_CONTENT }}

            ### üîç Full Changes
            [Compare with previous version](https://github.com/terem42/robohash/compare/${{ steps.setup.outputs.prev_tag }}...${{ github.ref_name }})          
          draft: false
          prerelease: false
          token: ${{ secrets.CR_PAT }}