name: Release Docker Image

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  id-token: write
  pull-requests: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Get merged PRs
        id: get-prs
        uses: actions/github-script@v6
        env:
          PR_LIST: ""        
        with:
          script: |
            const lastRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            }).catch(() => null);            
            
            const comparison = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: lastRelease ? lastRelease.data.tag_name : 'HEAD~1',
              head: context.ref
            });            
            
            const prSet = new Set();
            for (const commit of comparison.data.commits) {
              const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: commit.sha
              });
              prs.data.forEach(pr => prSet.add(pr.number));
            }            
            
            const prDetails = [];
            for (const prNumber of prSet) {
              const pr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });
              prDetails.push({
                number: pr.data.number,
                title: pr.data.title,
                url: pr.data.html_url,
                author: pr.data.user.login,
                merged_at: new Date(pr.data.merged_at).toLocaleDateString()
              });
            }            
            
            prDetails.sort((a, b) => b.number - a.number);
            const prMarkdown = prDetails.map(pr => 
              `- [#${pr.number}](${pr.url}) ${pr.title}  \n` +
              `  _Merged ${pr.merged_at} by @${pr.author}_`
            ).join('\n\n');            
            
            core.exportVariable('PR_LIST', prMarkdown || 'No pull requests found');            
            core.setOutput('pr-list', prMarkdown || '');
            core.setOutput('last-tag', lastRelease?.data.tag_name || 'initial');

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/terem42/robohash:${{ env.VERSION }}
            ghcr.io/terem42/robohash:latest
          build-args: |
            BUILD_VERSION=${{ env.VERSION }}

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          PR_CONTENT: ${{ env.PR_LIST }}         
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ env.VERSION }}
          body: |
            ## üê≥ Docker Image
            
            ```bash
            docker pull ghcr.io/terem42/robohash:${{ env.VERSION }}
            ```
            
            ## üì¶ Included Changes
            
            ${{ env.PR_CONTENT }}
            
            ## üîó Full Changelog
            
            [Compare changes](https://github.com/terem42/robohash/compare/${{ steps.get-prs.outputs.last_tag }}...${{ github.ref_name }})
          draft: false
          prerelease: false
          token: ${{ secrets.CR_PAT }}